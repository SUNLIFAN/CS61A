(define (compose-all funcs)
  (if (null? funcs) 
       (lambda (x) x)
       ((lambda (x) ((compose-all (cdr funcs))((car funcs) x))))
  )
)
(define (square x) (* x x))
(define (add-one x) (+ x 1))
(define (composed x) (compose-all (list square add-one)))